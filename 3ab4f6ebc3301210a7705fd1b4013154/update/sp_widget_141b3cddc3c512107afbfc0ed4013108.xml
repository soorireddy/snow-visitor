<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope) {
	/* widget controller */
	var c = this;

	$scope.isCaptured = false;
	$scope.photoData = '';
	let videoStream = null; // Variable to store the video stream

	// Function to start the camera
	$scope.startCamera = function() {
		navigator.mediaDevices.getUserMedia({ video: true })
			.then(function(stream) {
			videoStream = stream; // Store the stream to stop it later
			var video = document.getElementById('video');
			video.srcObject = stream;
		})
			.catch(function(err) {
			console.error("Error accessing the camera: ", err);
		});
	};

	// Function to stop the camera
	$scope.stopCamera = function() {
		if (videoStream) {
			var tracks = videoStream.getTracks();
			tracks.forEach(function(track) {
				track.stop(); // Stop each track to release the camera
			});
		}
	};

	// Function to capture the photo
	$scope.capturePhoto = function() {
		var video = document.getElementById('video');
		var canvas = document.createElement('canvas');
		canvas.width = 320;
		canvas.height = 240;
		var context = canvas.getContext('2d');
		context.drawImage(video, 0, 0, canvas.width, canvas.height);

		// Convert canvas to base64 image
		$scope.photoData = canvas.toDataURL('image/png');
		$scope.isCaptured = true;

		// Stop the camera stream after capturing the photo
		$scope.stopCamera();

		// Store the captured image data in a hidden field for the record producer
		document.getElementById('imageData').value = $scope.photoData;
	};

	// Function to retake the photo (reopens the camera)
	$scope.retakePhoto = function() {
		$scope.isCaptured = false;
		$scope.photoData = '';
		$scope.startCamera(); // Start the camera again when retaking the photo
	};

	// Start the camera for the first time when the widget loads
	$scope.startCamera();

	// Make sure to stop the camera stream if the user navigates away
	$scope.$on('$destroy', function() {
		$scope.stopCamera();
	});
};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Visitor Camera Capture</description>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>visitor-camera-capture</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Visitor Camera Capture</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-03 19:15:11</sys_created_on>
        <sys_id>141b3cddc3c512107afbfc0ed4013108</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Visitor Camera Capture</sys_name>
        <sys_package display_value="Visitor Management" source="x_845458_visitorsa">3ab4f6ebc3301210a7705fd1b4013154</sys_package>
        <sys_policy/>
        <sys_scope display_value="Visitor Management">3ab4f6ebc3301210a7705fd1b4013154</sys_scope>
        <sys_update_name>sp_widget_141b3cddc3c512107afbfc0ed4013108</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-03 19:24:27</sys_updated_on>
        <template><![CDATA[<div class="camera-capture-widget">
    <h3>Capture Image</h3>

    <div ng-if="!isCaptured">
        <video id="video" width="320" height="240" autoplay></video>
        <button class="btn btn-primary" ng-click="capturePhoto()">Capture Photo</button>
    </div>

    <div ng-if="isCaptured">
        <h4>Preview</h4>
        <img id="photo" width="320" height="240" ng-src="{{photoData}}" />
        <button class="btn btn-secondary" ng-click="retakePhoto()">Retake Photo</button>
    </div>
    
    <!-- Hidden input to store the base64 data -->
    <input type="hidden" id="imageData" value="{{photoData}}" />
</div>]]></template>
    </sp_widget>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>141b3cddc3c512107afbfc0ed4013108</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-03 19:15:10</sys_created_on>
        <sys_id>9dcb38ddc3c512107afbfc0ed4013115</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-03 19:15:10</sys_updated_on>
        <table>sp_widget</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
